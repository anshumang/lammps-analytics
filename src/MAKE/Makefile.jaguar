# jaguar = ORNL Jaguar Cray XT5, CC, native MPICH, FFTW

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

CXX =           CC
#CXX =           nvcc -I/opt/cray/mpt/6.3.0/gni/mpich2-pgi/121/include/ -I/opt/nvidia/cudatoolkit/5.5.20-1.0402.7700.8.1/extras/CUPTI/include
CCFLAGS =	-g -O
SHFLAGS =	-fPIC
DEPFLAGS =	-M

#LINK =		$(CXX)
LINK =		CC
LINKFLAGS =	-g -O
LIB =           
SIZE =		size

ARCHIVE =	ar
ARFLAGS =	-rc
SHLIBFLAGS =	-shared

# ---------------------------------------------------------------------
# LAMMPS-specific settings
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings, OPTIONAL
# see possible settings in doc/Section_start.html#2_2 (step 4)

LMP_INC =	-DLAMMPS_GZIP -DNODE_PARTITION

# MPI library, REQUIRED
# see discussion in doc/Section_start.html#2_2 (step 5)
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =       -DMPICH_SKIP_MPICXX 
MPI_PATH = 
MPI_LIB =	-lmpich -lpthread
#MPI_LIB =	-L/opt/cray/nvidia/default/lib64/ -L/opt/cray/mpt/6.3.0/gni/mpich2-pgi/121/lib/ -lmpich -lpthread
#MPI_LIB =	-L/opt/cray/nvidia/default/lib64/ -L/opt/cray/lib64/ -lmpich -lpthread

# FFT library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 6)
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC =       -DFFT_FFTW3 -I$(FFTW_INC)
FFT_PATH =	 -L$(FFTW_DIR)
FFT_LIB =	-lfftw3

# JPEG and/or PNG library, OPTIONAL
# see discussion in doc/Section_start.html#2_2 (step 7)
# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
# INC = path(s) for jpeglib.h and/or png.h
# PATH = path(s) for JPEG library and/or PNG library
# LIB = name(s) of JPEG library and/or PNG library

JPG_INC =       
JPG_PATH = 	
JPG_LIB =	

#CUPTI_LIB = -lcupti
CUPTI_LIB = -L/opt/nvidia/cudatoolkit/5.5.20-1.0402.7700.8.1/extras/CUPTI/lib64 -lcupti

# ---------------------------------------------------------------------
# build rules and dependencies
# no need to edit this section

include	Makefile.package.settings
include	Makefile.package

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC)
EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH)
EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB) $(CUDA_LIB) $(CUPTI_LIB)

# Path to src files

#vpath %.cpp ..
#vpath %.h ..
vpath %.cpp ..
#vpath %.cu ..
vpath %.h ..

# Link target

$(EXE):	$(OBJ)
	$(LINK) $(LINKFLAGS) $(EXTRA_PATH) $(OBJ) $(EXTRA_LIB) $(LIB) -o $(EXE)
	$(SIZE) $(EXE)

# Library targets

lib:	$(OBJ)
	$(ARCHIVE) $(ARFLAGS) $(EXE) $(OBJ)

shlib:	$(OBJ)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o $(EXE) \
        $(OBJ) $(EXTRA_LIB) $(LIB)

# Compilation rules

%.o:%.cpp
	$(CXX) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

#%.o:%.cu
#	$(CXX) -arch=sm_35 -Xptxas -v --use_fast_math $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

%.d:%.cpp
	$(CXX) $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

#%.d:%.cu
#	$(CXX) -arch=sm_35 -Xptxas -v --use_fast_math $(CCFLAGS) $(EXTRA_INC) $(DEPFLAGS) $< > $@

# Individual dependencies

DEPENDS = $(OBJ:.o=.d)
sinclude $(DEPENDS)
